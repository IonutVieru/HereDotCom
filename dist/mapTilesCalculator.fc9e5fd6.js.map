{"version":3,"sources":["mapTilesCalculator.js"],"names":["lat","lon","z","latRad","n","xTile","yTile","Math","PI","pow","log","tan","cos","console","tileXYToQuadKey","quadKey","i","digit","mask"],"mappings":"AAAA;AAEA,IAAIA,GAAG,GAAG,SAAV;AAAA,IAAqB;AACrBC,GAAG,GAAG,SADN;AAAA,IACoB;AACpBC,CAAC,GAAG,EAFJ;AAAA,IAEe;AACfC,MAHA;AAAA,IAIAC,CAJA;AAAA,IAKAC,KALA;AAAA,IAMAC,KANA;AAQAH,MAAM,GAAGH,GAAG,GAAGO,IAAI,CAACC,EAAX,GAAgB,GAAzB;AACAJ,CAAC,GAAGG,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYP,CAAZ,CAAJ;AACAG,KAAK,GAAGD,CAAC,IAAI,CAACH,GAAG,GAAG,GAAP,IAAc,GAAlB,CAAT;AACAK,KAAK,GAAGF,CAAC,IAAI,IAAGG,IAAI,CAACG,GAAL,CAASH,IAAI,CAACI,GAAL,CAASR,MAAT,IAAmB,IAAEI,IAAI,CAACK,GAAL,CAAST,MAAT,CAA9B,IAAiDI,IAAI,CAACC,EAA7D,CAAD,GAAqE,CAA7E;AACAK,OAAO,CAACH,GAAR,CAAY,gBAAgBR,CAA5B;AACAW,OAAO,CAACH,GAAR,CAAY,mBAAiBL,KAA7B;AACAQ,OAAO,CAACH,GAAR,CAAY,kBAAgBJ,KAA5B;;AAIA,SAASQ,eAAT,CAAyBT,KAAzB,EAAgCC,KAAhC,EAAuCJ,CAAvC,EAA0C;AACxC,MAAIa,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAGd,CAAb,EAAgBc,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAIC,KAAK,GAAG,GAAZ;AAAA,QACAC,IAAI,GAAG,KAAMF,CAAC,GAAG,CADjB;;AAEA,QAAI,CAACX,KAAK,GAAGa,IAAT,KAAkB,CAAtB,EAAyB;AACvBD,MAAAA,KAAK;AACN;;AAED,QAAI,CAACX,KAAK,GAAGY,IAAT,KAAkB,CAAtB,EAAyB;AACvBD,MAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACD;;AACDF,IAAAA,OAAO,IAAIE,KAAX;AACD,GAbuC,CAatC;;;AACFJ,EAAAA,OAAO,CAACH,GAAR,CAAY,aAAWK,OAAvB;AACA,SAAOA,OAAP;AACD;;AACDD,eAAe,CAACT,KAAD,EAAQC,KAAR,EAAeJ,CAAf,CAAf","file":"mapTilesCalculator.fc9e5fd6.js","sourceRoot":"..","sourcesContent":["//Calculating the map tiles\n\nvar lat = 55.703934, // Latitude\nlon = 12.485140,    // Longitude\nz = 13,        // Zoom level\nlatRad,\nn,\nxTile,\nyTile;\n\nlatRad = lat * Math.PI / 180;\nn = Math.pow(2, z);\nxTile = n * ((lon + 180) / 360);\nyTile = n * (1-(Math.log(Math.tan(latRad) + 1/Math.cos(latRad)) /Math.PI)) / 2;\nconsole.log(\"zoom level=\" + z)\nconsole.log(\"X tile coord= \"+xTile);\nconsole.log(\"Y tile coord=\"+yTile);\n\n\n\nfunction tileXYToQuadKey(xTile, yTile, z) {\n  var quadKey = \"\";\n  for (var i = z; i > 0; i--) {\n    var digit = \"0\",\n    mask = 1 << (i - 1);\n    if ((xTile & mask) != 0) {\n      digit++;\n    }\n    \n    if ((yTile & mask) != 0) {\n      digit = digit + 2; \n    }\n    quadKey += digit;\n  } // for i return quadKey; \n  console.log(\"Quadkey=\"+quadKey);\n  return quadKey;\n}\ntileXYToQuadKey(xTile, yTile, z);"]}